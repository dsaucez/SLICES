---
# based on k8s-node.yaml but faster
# as R2lab nodes use an OS image that already includes some steps

- name: Get cluster infos
  hosts: masters
  run_once: true
  become: yes
  roles:
    - role: k8s-infos

- name: Prepare k8s nodes
  hosts: computes:!masters
  become: yes
  vars:
    token: "{{ hostvars['ansible_dummy_host']['_token'] }}"
    ca_cert_hash: "{{ hostvars['ansible_dummy_host']['_ca_cert_hash'] }}"
    kube_config_local_path: "{{ hostvars['ansible_dummy_host']['_kube_config'] }}"
    master: "{{ k8s['apiserver_advertise_address'] | default(hostvars['ansible_dummy_host']['_master']) }}"
  environment:
    PATH: '{{ansible_env.PATH }}:/usr/local/bin/'
  tasks:

  # Prepare k8s
  - name: Create ~/.kube
    ansible.builtin.file:
      path: ~/.kube/
      state: directory

  - name: Enable and start kubelet service
    ansible.builtin.systemd:
      name: kubelet
      state: started
      enabled: yes

  - name: Reset k8s
    shell: "kubeadm reset -f --cri-socket unix:///var/run/cri-dockerd.sock --force"

  - name: Copy Kube config
    ansible.builtin.copy:
      src: '{{ kube_config_local_path }}'
      dest: ~/.kube/config
      mode: 0600

  - name: Disable swap
    shell: "swapoff -a"

#  - name: Display k8s info
#    debug:
#      var: runtime
#    tags: debug_info

  - name: Create kubeadm configuration
    ansible.builtin.template:
      src: ./roles/k8s-node/templates/kubeadm_config.yaml.j2
      dest: ./kubeadm_config.yaml

  - name: Join k8s cluster
    ansible.builtin.shell: 'kubeadm join --config ./kubeadm_config.yaml'

  - name: Wait for the node to be ready
    ansible.builtin.include_tasks: k8s-ready.yaml

- name: Taint worker FIT nodes with oai-gnb:NoSchedule
  hosts: computes:!masters
  become: yes
  tasks:
  - name: Add oai-gnb:NoSchedule
    shell: 'kubectl taint nodes {{ hostvars[inventory_hostname]["xx-name"] }} app.kubernetes.io/name=oai-gnb:NoSchedule --overwrite'
  - name: Remove reservedSystemCPUs from kubelet config
    ansible.builtin.lineinfile:
      path: /var/lib/kubelet/config.yaml
      regexp: '^reservedSystemCPUs:'
      state: absent
  - name: Restart kubelet to apply config
    ansible.builtin.service:
      name: kubelet
      state: restarted
      
  - name: Allow scheduling on masters that are also computes
    hosts: masters:&computes
    become: yes
    tasks:
      - name: Check if control-plane NoSchedule taint exists
        ansible.builtin.command: >
          kubectl get node {{ hostvars[inventory_hostname]["xx-name"] }} -o jsonpath="{.spec.taints[*]}"
        register: taints_check
        changed_when: false
        failed_when: false

      - name: Remove NoSchedule taint from control-plane if present
        ansible.builtin.shell: >
          kubectl taint nodes {{ hostvars[inventory_hostname]["xx-name"] }} node-role.kubernetes.io/control-plane:NoSchedule- --overwrite
        when: "'node-role.kubernetes.io/control-plane' in taints_check.stdout and 'NoSchedule' in taints_check.stdout"



