apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
nodeRegistration:
  name: "{{ hostvars[inventory_hostname]['xx-name'] }}"
  criSocket: "{{ runtime[k8s.runtime].cri.socket }}"
  kubeletExtraArgs:
    enable-controller-attach-detach: "false"
{% if k8s.apiserver_advertise_address is defined or hostvars[inventory_hostname]['xx-local-ip'] is defined %}
localAPIEndpoint:
  advertiseAddress: "{{ k8s.apiserver_advertise_address | default( hostvars[inventory_hostname]['xx-local-ip'] )}}"
{% endif %}
certificateKey: "{{ certificate_key }}"
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
networking:
  serviceSubnet: "{{ k8s.serviceSubnet | default('10.96.0.0/16') }}"
  podSubnet: "{{ k8s.podSubnet | default('10.244.0.0/16') }}"
  dnsDomain: "{{ k8s.dnsDomain | default('cluster.local') }}"
kubernetesVersion: "v1.29.2"
{% if k8s.controlPlaneEndpoint is defined %}
controlPlaneEndpoint: "{{ k8s.controlPlaneEndpoint }}"
{% endif %}
---
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
cgroupDriver: systemd
cpuManagerPolicy: static
cpuManagerPolicyOptions:
   "full-pcpus-only": "true"
reservedSystemCPUs: 0-7
memorySwap: {}
failSwapOn: false
containerLogMaxSize: 50Mi
featureGates:
   CPUManager: true
   CPUManagerPolicyOptions: true
   CPUManagerPolicyBetaOptions: true
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
ipvs:
  strictARP: true
